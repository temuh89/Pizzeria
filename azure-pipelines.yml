# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables: 
- group: TerraformVG

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformCLI@2
  displayName: 'Terraform Init'
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    commandOptions: '-reconfigure'
    backendType: 'azurerm'
    backendServiceArm: 'Azure Pass - Sponsorship(1907e921-73d7-4a29-93bd-1c6bde244c59)'
    backendAzureRmSubscriptionId: '1907e921-73d7-4a29-93bd-1c6bde244c59'
    backendAzureRmResourceGroupName: 'terraform-backend'
    backendAzureRmStorageAccountName: 'tonytrfmstorage'
    backendAzureRmContainerName: 'tfstatestorage'
    backendAzureRmKey: 'terraform.tfstate'
    allowTelemetryCollection: true

- task: TerraformCLI@2
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    environmentServiceName: 'Azure Pass - Sponsorship(1907e921-73d7-4a29-93bd-1c6bde244c59)'
    providerAzureRmSubscriptionId: '1907e921-73d7-4a29-93bd-1c6bde244c59'
    runAzLogin: true
    allowTelemetryCollection: true

- task: TerraformCLI@2
  displayName: 'Terraform Apply'
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    environmentServiceName: 'Azure Pass - Sponsorship(1907e921-73d7-4a29-93bd-1c6bde244c59)'
    providerAzureRmSubscriptionId: '1907e921-73d7-4a29-93bd-1c6bde244c59'
    allowTelemetryCollection: true